{
   "jobs": {
      "build-2.6-bionic-amd64": {
         "name": "build-2.6-bionic-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-bionic-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-bionic-arm64": {
         "name": "build-2.6-bionic-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-bionic-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-bookworm-amd64": {
         "name": "build-2.6-bookworm-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-bookworm-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-bookworm-arm64": {
         "name": "build-2.6-bookworm-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-bookworm-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-bullseye-amd64": {
         "name": "build-2.6-bullseye-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-bullseye-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-bullseye-arm64": {
         "name": "build-2.6-bullseye-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-bullseye-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-buster-amd64": {
         "name": "build-2.6-buster-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-buster-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-buster-arm64": {
         "name": "build-2.6-buster-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-buster-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-focal-amd64": {
         "name": "build-2.6-focal-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-focal-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-focal-arm64": {
         "name": "build-2.6-focal-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-focal-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-jammy-amd64": {
         "name": "build-2.6-jammy-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-jammy-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.6-jammy-arm64": {
         "name": "build-2.6-jammy-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.6-jammy-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-bionic-amd64": {
         "name": "build-2.7-bionic-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-bionic-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-bionic-arm64": {
         "name": "build-2.7-bionic-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-bionic-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-bookworm-amd64": {
         "name": "build-2.7-bookworm-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-bookworm-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-bookworm-arm64": {
         "name": "build-2.7-bookworm-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-bookworm-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-bullseye-amd64": {
         "name": "build-2.7-bullseye-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-bullseye-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-bullseye-arm64": {
         "name": "build-2.7-bullseye-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-bullseye-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-buster-amd64": {
         "name": "build-2.7-buster-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-buster-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-buster-arm64": {
         "name": "build-2.7-buster-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-buster-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-focal-amd64": {
         "name": "build-2.7-focal-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-focal-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-focal-arm64": {
         "name": "build-2.7-focal-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-focal-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-jammy-amd64": {
         "name": "build-2.7-jammy-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-jammy-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-2.7-jammy-arm64": {
         "name": "build-2.7-jammy-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-2.7-jammy-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-bionic-amd64": {
         "name": "build-3.0-bionic-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-bionic-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-bionic-arm64": {
         "name": "build-3.0-bionic-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-bionic-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-bookworm-amd64": {
         "name": "build-3.0-bookworm-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-bookworm-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-bookworm-arm64": {
         "name": "build-3.0-bookworm-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-bookworm-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-bullseye-amd64": {
         "name": "build-3.0-bullseye-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-bullseye-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-bullseye-arm64": {
         "name": "build-3.0-bullseye-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-bullseye-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-buster-amd64": {
         "name": "build-3.0-buster-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-buster-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-buster-arm64": {
         "name": "build-3.0-buster-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-buster-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-focal-amd64": {
         "name": "build-3.0-focal-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-focal-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-focal-arm64": {
         "name": "build-3.0-focal-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-focal-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-jammy-amd64": {
         "name": "build-3.0-jammy-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-jammy-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.0-jammy-arm64": {
         "name": "build-3.0-jammy-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.0-jammy-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-bionic-amd64": {
         "name": "build-3.1-bionic-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-bionic-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-bionic-arm64": {
         "name": "build-3.1-bionic-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-bionic-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-bookworm-amd64": {
         "name": "build-3.1-bookworm-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-bookworm-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-bookworm-arm64": {
         "name": "build-3.1-bookworm-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-bookworm-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-bullseye-amd64": {
         "name": "build-3.1-bullseye-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-bullseye-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-bullseye-arm64": {
         "name": "build-3.1-bullseye-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-bullseye-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-buster-amd64": {
         "name": "build-3.1-buster-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-buster-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-buster-arm64": {
         "name": "build-3.1-buster-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-buster-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-focal-amd64": {
         "name": "build-3.1-focal-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-focal-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-focal-arm64": {
         "name": "build-3.1-focal-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-focal-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-jammy-amd64": {
         "name": "build-3.1-jammy-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-jammy-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.1-jammy-arm64": {
         "name": "build-3.1-jammy-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.1-jammy-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-bionic-amd64": {
         "name": "build-3.2-bionic-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-bionic-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-bionic-arm64": {
         "name": "build-3.2-bionic-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-bionic-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-bookworm-amd64": {
         "name": "build-3.2-bookworm-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-bookworm-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-bookworm-arm64": {
         "name": "build-3.2-bookworm-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-bookworm-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-bullseye-amd64": {
         "name": "build-3.2-bullseye-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-bullseye-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-bullseye-arm64": {
         "name": "build-3.2-bullseye-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-bullseye-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-buster-amd64": {
         "name": "build-3.2-buster-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-buster-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-buster-arm64": {
         "name": "build-3.2-buster-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-buster-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-focal-amd64": {
         "name": "build-3.2-focal-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-focal-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-focal-arm64": {
         "name": "build-3.2-focal-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-focal-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-jammy-amd64": {
         "name": "build-3.2-jammy-amd64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "amd64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-jammy-amd64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "build-3.2-jammy-arm64": {
         "name": "build-3.2-jammy-arm64",
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "docker/setup-qemu-action@v2"
            },
            {
               "env": {
                  "ARCH_FILTER": "arm64",
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby build.rb --pull --push"
            },
            {
               "uses": "actions/upload-artifact@v3",
               "with": {
                  "name": "build-3.2-jammy-arm64_built-images.json",
                  "path": "tmp/built_images.json",
                  "retention-days": 1
               }
            }
         ]
      },
      "manifest-2.6-bionic": {
         "name": "manifest-2.6-bionic",
         "needs": [
            "build-2.6-bionic-amd64",
            "build-2.6-bionic-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-2.6-bionic"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-2.6-bionic"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.6-bookworm": {
         "name": "manifest-2.6-bookworm",
         "needs": [
            "build-2.6-bookworm-amd64",
            "build-2.6-bookworm-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-2.6-bookworm"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-2.6-bookworm"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.6-bullseye": {
         "name": "manifest-2.6-bullseye",
         "needs": [
            "build-2.6-bullseye-amd64",
            "build-2.6-bullseye-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-2.6-bullseye"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-2.6-bullseye"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.6-buster": {
         "name": "manifest-2.6-buster",
         "needs": [
            "build-2.6-buster-amd64",
            "build-2.6-buster-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-buster-amd64_built_images.json",
                  "path": "tmp/manifest-2.6-buster"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-buster-arm64_built_images.json",
                  "path": "tmp/manifest-2.6-buster"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.6-focal": {
         "name": "manifest-2.6-focal",
         "needs": [
            "build-2.6-focal-amd64",
            "build-2.6-focal-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-focal-amd64_built_images.json",
                  "path": "tmp/manifest-2.6-focal"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-focal-arm64_built_images.json",
                  "path": "tmp/manifest-2.6-focal"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.6-jammy": {
         "name": "manifest-2.6-jammy",
         "needs": [
            "build-2.6-jammy-amd64",
            "build-2.6-jammy-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-2.6-jammy"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-2.6-jammy"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "2.6"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.7-bionic": {
         "name": "manifest-2.7-bionic",
         "needs": [
            "build-2.7-bionic-amd64",
            "build-2.7-bionic-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-2.7-bionic"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-2.7-bionic"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.7-bookworm": {
         "name": "manifest-2.7-bookworm",
         "needs": [
            "build-2.7-bookworm-amd64",
            "build-2.7-bookworm-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-2.7-bookworm"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-2.7-bookworm"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.7-bullseye": {
         "name": "manifest-2.7-bullseye",
         "needs": [
            "build-2.7-bullseye-amd64",
            "build-2.7-bullseye-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-2.7-bullseye"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-2.7-bullseye"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.7-buster": {
         "name": "manifest-2.7-buster",
         "needs": [
            "build-2.7-buster-amd64",
            "build-2.7-buster-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-buster-amd64_built_images.json",
                  "path": "tmp/manifest-2.7-buster"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-buster-arm64_built_images.json",
                  "path": "tmp/manifest-2.7-buster"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.7-focal": {
         "name": "manifest-2.7-focal",
         "needs": [
            "build-2.7-focal-amd64",
            "build-2.7-focal-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-focal-amd64_built_images.json",
                  "path": "tmp/manifest-2.7-focal"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-focal-arm64_built_images.json",
                  "path": "tmp/manifest-2.7-focal"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-2.7-jammy": {
         "name": "manifest-2.7-jammy",
         "needs": [
            "build-2.7-jammy-amd64",
            "build-2.7-jammy-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-2.7-jammy"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-2.7-jammy"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "2.7"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.0-bionic": {
         "name": "manifest-3.0-bionic",
         "needs": [
            "build-3.0-bionic-amd64",
            "build-3.0-bionic-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-3.0-bionic"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-3.0-bionic"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.0-bookworm": {
         "name": "manifest-3.0-bookworm",
         "needs": [
            "build-3.0-bookworm-amd64",
            "build-3.0-bookworm-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-3.0-bookworm"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-3.0-bookworm"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.0-bullseye": {
         "name": "manifest-3.0-bullseye",
         "needs": [
            "build-3.0-bullseye-amd64",
            "build-3.0-bullseye-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-3.0-bullseye"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-3.0-bullseye"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.0-buster": {
         "name": "manifest-3.0-buster",
         "needs": [
            "build-3.0-buster-amd64",
            "build-3.0-buster-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-buster-amd64_built_images.json",
                  "path": "tmp/manifest-3.0-buster"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-buster-arm64_built_images.json",
                  "path": "tmp/manifest-3.0-buster"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.0-focal": {
         "name": "manifest-3.0-focal",
         "needs": [
            "build-3.0-focal-amd64",
            "build-3.0-focal-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-focal-amd64_built_images.json",
                  "path": "tmp/manifest-3.0-focal"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-focal-arm64_built_images.json",
                  "path": "tmp/manifest-3.0-focal"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.0-jammy": {
         "name": "manifest-3.0-jammy",
         "needs": [
            "build-3.0-jammy-amd64",
            "build-3.0-jammy-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-3.0-jammy"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-3.0-jammy"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.0"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.1-bionic": {
         "name": "manifest-3.1-bionic",
         "needs": [
            "build-3.1-bionic-amd64",
            "build-3.1-bionic-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-3.1-bionic"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-3.1-bionic"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.1-bookworm": {
         "name": "manifest-3.1-bookworm",
         "needs": [
            "build-3.1-bookworm-amd64",
            "build-3.1-bookworm-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-3.1-bookworm"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-3.1-bookworm"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.1-bullseye": {
         "name": "manifest-3.1-bullseye",
         "needs": [
            "build-3.1-bullseye-amd64",
            "build-3.1-bullseye-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-3.1-bullseye"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-3.1-bullseye"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.1-buster": {
         "name": "manifest-3.1-buster",
         "needs": [
            "build-3.1-buster-amd64",
            "build-3.1-buster-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-buster-amd64_built_images.json",
                  "path": "tmp/manifest-3.1-buster"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-buster-arm64_built_images.json",
                  "path": "tmp/manifest-3.1-buster"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.1-focal": {
         "name": "manifest-3.1-focal",
         "needs": [
            "build-3.1-focal-amd64",
            "build-3.1-focal-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-focal-amd64_built_images.json",
                  "path": "tmp/manifest-3.1-focal"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-focal-arm64_built_images.json",
                  "path": "tmp/manifest-3.1-focal"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.1-jammy": {
         "name": "manifest-3.1-jammy",
         "needs": [
            "build-3.1-jammy-amd64",
            "build-3.1-jammy-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-3.1-jammy"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-3.1-jammy"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.1"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.2-bionic": {
         "name": "manifest-3.2-bionic",
         "needs": [
            "build-3.2-bionic-amd64",
            "build-3.2-bionic-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-3.2-bionic"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-3.2-bionic"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bionic",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.2-bookworm": {
         "name": "manifest-3.2-bookworm",
         "needs": [
            "build-3.2-bookworm-amd64",
            "build-3.2-bookworm-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-3.2-bookworm"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-3.2-bookworm"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bookworm",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.2-bullseye": {
         "name": "manifest-3.2-bullseye",
         "needs": [
            "build-3.2-bullseye-amd64",
            "build-3.2-bullseye-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-3.2-bullseye"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-3.2-bullseye"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "bullseye",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.2-buster": {
         "name": "manifest-3.2-buster",
         "needs": [
            "build-3.2-buster-amd64",
            "build-3.2-buster-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-buster-amd64_built_images.json",
                  "path": "tmp/manifest-3.2-buster"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-buster-arm64_built_images.json",
                  "path": "tmp/manifest-3.2-buster"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "buster",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.2-focal": {
         "name": "manifest-3.2-focal",
         "needs": [
            "build-3.2-focal-amd64",
            "build-3.2-focal-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-focal-amd64_built_images.json",
                  "path": "tmp/manifest-3.2-focal"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-focal-arm64_built_images.json",
                  "path": "tmp/manifest-3.2-focal"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "focal",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-3.2-jammy": {
         "name": "manifest-3.2-jammy",
         "needs": [
            "build-3.2-jammy-amd64",
            "build-3.2-jammy-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-3.2-jammy"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-3.2-jammy"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": {
                  "DIST_FILTER": "jammy",
                  "SERIES_FILTER": "3.2"
               },
               "run": "ruby manifest.rb --pull --subtag"
            }
         ]
      },
      "manifest-latest": {
         "name": "manifest-latest",
         "needs": [
            "build-2.6-bionic-amd64",
            "build-2.7-bionic-amd64",
            "build-3.0-bionic-amd64",
            "build-3.1-bionic-amd64",
            "build-3.2-bionic-amd64",
            "build-2.6-focal-amd64",
            "build-2.7-focal-amd64",
            "build-3.0-focal-amd64",
            "build-3.1-focal-amd64",
            "build-3.2-focal-amd64",
            "build-2.6-jammy-amd64",
            "build-2.7-jammy-amd64",
            "build-3.0-jammy-amd64",
            "build-3.1-jammy-amd64",
            "build-3.2-jammy-amd64",
            "build-2.6-bullseye-amd64",
            "build-2.7-bullseye-amd64",
            "build-3.0-bullseye-amd64",
            "build-3.1-bullseye-amd64",
            "build-3.2-bullseye-amd64",
            "build-2.6-buster-amd64",
            "build-2.7-buster-amd64",
            "build-3.0-buster-amd64",
            "build-3.1-buster-amd64",
            "build-3.2-buster-amd64",
            "build-2.6-bookworm-amd64",
            "build-2.7-bookworm-amd64",
            "build-3.0-bookworm-amd64",
            "build-3.1-bookworm-amd64",
            "build-3.2-bookworm-amd64",
            "build-2.6-bionic-arm64",
            "build-2.7-bionic-arm64",
            "build-3.0-bionic-arm64",
            "build-3.1-bionic-arm64",
            "build-3.2-bionic-arm64",
            "build-2.6-focal-arm64",
            "build-2.7-focal-arm64",
            "build-3.0-focal-arm64",
            "build-3.1-focal-arm64",
            "build-3.2-focal-arm64",
            "build-2.6-jammy-arm64",
            "build-2.7-jammy-arm64",
            "build-3.0-jammy-arm64",
            "build-3.1-jammy-arm64",
            "build-3.2-jammy-arm64",
            "build-2.6-bullseye-arm64",
            "build-2.7-bullseye-arm64",
            "build-3.0-bullseye-arm64",
            "build-3.1-bullseye-arm64",
            "build-3.2-bullseye-arm64",
            "build-2.6-buster-arm64",
            "build-2.7-buster-arm64",
            "build-3.0-buster-arm64",
            "build-3.1-buster-arm64",
            "build-3.2-buster-arm64",
            "build-2.6-bookworm-arm64",
            "build-2.7-bookworm-arm64",
            "build-3.0-bookworm-arm64",
            "build-3.1-bookworm-arm64",
            "build-3.2-bookworm-arm64"
         ],
         "permissions": {
            "contents": "read",
            "id-token": "write"
         },
         "runs-on": "ubuntu-latest",
         "steps": [
            {
               "run": "mkdir -p ~/.docker\\n\necho '{\"experimental\": \"enabled\"}' > ~/.docker/config.json\n"
            },
            {
               "uses": "ruby/setup-ruby@v1",
               "with": {
                  "ruby-version": "3.1"
               }
            },
            {
               "name": "login-dockerhub",
               "run": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u sorah --password-stdin"
            },
            {
               "uses": "aws-actions/configure-aws-credentials@v1",
               "with": {
                  "aws-region": "us-east-1",
                  "role-duration-seconds": 14400,
                  "role-skip-session-tagging": "true",
                  "role-to-assume": "${{ secrets.AWS_ROLE_TO_ASSUME }}"
               }
            },
            {
               "name": "Login to ECR Public",
               "run": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws"
            },
            {
               "uses": "actions/checkout@v3"
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bionic-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-focal-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-focal-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-focal-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-focal-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-focal-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-jammy-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bullseye-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-buster-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-buster-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-buster-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-buster-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-buster-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bookworm-amd64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bionic-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-focal-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-focal-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-focal-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-focal-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-focal-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-jammy-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bullseye-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-buster-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-buster-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-buster-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-buster-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-buster-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.6-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-2.7-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.0-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.1-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "uses": "actions/download-artifact@v3",
               "with": {
                  "name": "build-3.2-bookworm-arm64_built_images.json",
                  "path": "tmp/manifest-latest"
               }
            },
            {
               "run": "ruby -rjson -e \"puts JSON.generate(ARGV.map { JSON.parse(File.read(_1)) }.inject(&:+))\" tmp/build-*_built_images.json > tmp/built_images.json"
            },
            {
               "env": { },
               "run": "ruby manifest.rb --pull --latest"
            }
         ]
      }
   },
   "name": "docker-build",
   "on": {
      "push": {
         "branches": [
            "master"
         ]
      },
      "schedule": [
         {
            "cron": "18 7 2,12,22 * *"
         }
      ]
   }
}
